<mddoc>
	<docpage target="README.md" autoloader="psr4" autoloader-root="src"
			 autoloader-root-namespace="donatj\MockWebServer">
		<section title="Mock Web Server">
			<text><![CDATA[[![Scrutinizer Code Quality](https://scrutinizer-ci.com/g/donatj/mock-webserver/badges/quality-score.png?b=master)](https://scrutinizer-ci.com/g/donatj/mock-webserver/?branch=master)
[![License](https://poser.pugx.org/donatj/mock-webserver/license)](https://packagist.org/packages/donatj/mock-webserver)

Simple, easy to use Mock Web Server for PHP unit testing. Gets along simply with PHPUnit and other unit testing frameworks.

Unit testing HTTP requests can be difficult, especially in cases where injecting a request library is difficult or not ideal. This helps greatly simplify the process.

Mock Web Server creates a local Web Server you can make predefined requests against.
]]></text>
			<docpage target="docs/docs.md" autoloader="psr4" autoloader-root="src"
					 autoloader-root-namespace="donatj\MockWebServer">
				<section title="Documentation">
					<file name="src/MockWebServer.php"/>
				</section>
			</docpage>
			<section title="Requirements">
				<text>- PHP 5.4+</text>
			</section>
			<section title="Installing">
				<source lang="php">composer require "donatj/mock-webserver" --dev</source>
				<text>Omitting the `--dev` will add this to `require` rather than `require-dev`</text>
			</section>
			<section title="Examples">
				<section title="Basic Usage">
					<text><![CDATA[The following example shows the most basic usage. If you do not define a path, the server will simply bounce a JSON body describing the request back to you.]]></text>
					<source name="example/basic.php" lang="php"/>
					<text>Outputs:</text>
					<source><![CDATA[Requesting: http://127.0.0.1:8123/endpoint?get=foobar

{
    "_GET": {
        "get": "foobar"
    },
    "_POST": [],
    "_FILES": [],
    "_COOKIE": [],
    "HEADERS": {
        "Host": "127.0.0.1:8123",
        "Connection": "close"
    },
    "METHOD": "GET",
    "INPUT": "",
    "PARSED_INPUT": [],
    "REQUEST_URI": "\/endpoint?get=foobar",
    "PARSED_REQUEST_URI": {
        "path": "\/endpoint",
        "query": "get=foobar"
    }
}]]></source>
				</section>
				<section title="Simple">
					<source name="example/simple.php" lang="php"/>
					<text>Outputs:</text>
					<source><![CDATA[Requesting: http://127.0.0.1:8123/definedPath

HTTP/1.0 200 OK
Host: 127.0.0.1:8123
Connection: close
X-Powered-By: PHP/5.6.30
Cache-Control: no-cache
Content-type: text/html; charset=UTF-8

This is our http body response]]></source>
				</section>
				<section title="PHPUnit">
					<source name="example/phpunit.php" lang="php"/>
				</section>
			</section>
		</section>
	</docpage>
</mddoc>